


Network Working Group                                            Xu, Ed.
Request for Comments: 1                   JHU Network Security Fall 2018
Category: Standards Track                                 September 2018


                    Playground Request For Comments

Abstract

   This document descirbes Cheng's Transmission Protocol(CTP).

Status of this Memo

   This document specifies a Playgrounds standards track protocol for
   the Playground Experiment, and requests discussion and suggestions
   for improvements.  Distribution of this memo is unlimited.

Copyright Notice

   Copyright (c) 2018 SETH JAMES NIELSON.  All rights reserved.

   This document is used solely for educational purposes.  Any citations
   within this document are also for educational purposes and also for
   technical reference.  If any of these cited elements are protected
   under copyright, their inclusion here falls under Fair Use
   provisions.

























Xu                           Standards Track                    [Page 1]

RFC 1                            PRFC's                   September 2018


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.1.  Scope . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.2.  About this Document . . . . . . . . . . . . . . . . . . . . 3
     1.3.  Features  . . . . . . . . . . . . . . . . . . . . . . . . . 3
       1.3.1.  Basic Data Transfer . . . . . . . . . . . . . . . . . . 3
       1.3.2.  Reliable Delivery . . . . . . . . . . . . . . . . . . . 3
       1.3.3.  Error handling  . . . . . . . . . . . . . . . . . . . . 4
   2.  PHILOSOPHY  . . . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.1.  Basic Work Flow . . . . . . . . . . . . . . . . . . . . . . 4
       2.1.1.  Session Establishment . . . . . . . . . . . . . . . . . 4
       2.1.2.  Data Transmission . . . . . . . . . . . . . . . . . . . 4
       2.1.3.  Data Retransmission . . . . . . . . . . . . . . . . . . 4
       2.1.4.  Error Handling  . . . . . . . . . . . . . . . . . . . . 5
       2.1.5.  Session Termination . . . . . . . . . . . . . . . . . . 5
   3.  FUNCTIONAL SPECIFICATION  . . . . . . . . . . . . . . . . . . . 5
     3.1.  Header Format . . . . . . . . . . . . . . . . . . . . . . . 5
     3.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . 5
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 6
   Intellectual Property and Copyright Statements  . . . . . . . . . . 7






























Xu                           Standards Track                    [Page 2]

RFC 1                            PRFC's                   September 2018


1.  Introduction

   The Cheng's Transmission Protocol(CTP) is a simplified TCP-like
   transmission protocol that is designed for use as a highly reliable
   host-to-host protocol between hosts in interconnected network
   systems.  This document describes the functions,operations and
   features of CTP in order to give users a comprehensive understanding
   of CTP.

1.1.  Scope

   The CTP is intended to offer a service of reliable delivery of data
   between interconnected network systems.

1.2.  About this Document

   This document represents a specification of the behavior required of
   any CTP implementation.

1.3.  Features

   As noted above, the primary purpose of the CTP is to provide reliable
   logical connection serivice and data delivery service.  To achieve
   this goal, following areas should be satisfied:

   Basic data Transfer

   Reliable Delivery

   Session

   Bytes-oriented

   The basic features of the CTP is described in the following
   paragraphs.

1.3.1.  Basic Data Transfer

   The CTP is able to transfer continues stream of bytes by packaging
   some number of bytes into packets for transmission through the
   internet system.  Basiclly, the CTPs decide when to hold or forward
   the data at their own convenience.

1.3.2.  Reliable Delivery

   The CTP must recover from data that is damaged,lost,duplicated,or
   delivered out of order by the internet communication system.  This is
   achieved by assigning a sequence number to each packet that is



Xu                           Standards Track                    [Page 3]

RFC 1                            PRFC's                   September 2018


   transmitted and requiring an acknowledgment indicated that data is
   delivered from the receiving CTP.  Also, there is a specific time
   interval, meaning if ACK does not arrive within this time interval,
   the sending CTP will resend the data.

1.3.3.  Error handling

   Data might be altered or corrupted after transmission.  In order to
   prevent this situatinon, both the sending CTP and the receiving CTP
   will calculate the Checksum of the packet.  If the resulate are not
   same, the packet is considered as be altered.


2.  PHILOSOPHY

2.1.  Basic Work Flow

2.1.1.  Session Establishment

   In order to implement reliable data delivery, a session must be
   established before communication between CTPs.A session is created
   once the sending CTP sends the session request with its address and
   destination address, the receiving CTP receives this request and
   returns a successful message that notifies the sender.  Besides, a
   socket will also be created to identify this session through all
   networks connected together.

2.1.2.  Data Transmission

   The data that flows in the session is regarded as a stream of bytes.
   At the sending end, the amount of data transmitted every time is not
   fixed.  The sending CTP don't have to wait until data is up to any
   specific amount to send the data.  Even if there is one byte, the
   sending CTP can transmit it to the receiver.  But the upper bound is
   not unlimited.  Maximum packet size is defined to prevent the sending
   CTP from holding the data for too long and too large.  Once the
   amount of data reaches up to the amount of maximum packet size, the
   sending CTP has to send the unsent data.  In addition, since each
   packet will be sent in a specific order, the CTP will assign a
   sequence number to each packet that is transmitted.  Therefore the
   receiving CTP is able to reassemble all the received packets in the
   original order.

2.1.3.  Data Retransmission

   A retransmission timer is set when CTP sends data.  If the data is
   not acknowledged by the other end(The data packet is lost or The ACK
   packet is lost) when the timer expires, CTP retransmits the data.



Xu                           Standards Track                    [Page 4]

RFC 1                            PRFC's                   September 2018


   The value of this timer is calculated dynamically, based on the
   round-trip time measured by CTP for this session.

2.1.4.  Error Handling

   When the data arrives at the receiving end, the CTP will check if it
   is in the right order.  At first, the receiving CTP will check if its
   sequence number is the previous packet's sequence number +1.  If so,
   it returns an ACK with this sequence number to notify the sender that
   a packet with this sequence number is received so far.  If its
   sequence number is bigger than the one it should receive, which means
   the previous data has not arrived yet, so the receiving CTP will hold
   it until the previous data is received.

2.1.5.  Session Termination

   When the sending CTP is finished with data transmission and ready to
   close the session, it sends a Exit request with no data and waits for
   an ACK from the receiving end.  After receiving the ACK, the sending
   TCP close the session.  And the receiving CTP terminate the session
   after returning the ACK.


3.  FUNCTIONAL SPECIFICATION

3.1.  Header Format

   class CtpPacket(): FIELDS = { ("Length",UINT8) ("Source_addr",UINT8),
   ("Destination_addr",UINT16), ("Sequence_num",UINT32),
   ("Max_pkt",UINT16) ("Ack_id",UINT16), ("Exit",BOOL),
   ("Checksum",STRING) }

3.2.  Terminology

   1.  Length: Overall length of the entire packet starting with the
       source_addr and ending with the Checksum.

   2.  Source_addr: Source address field, which identifies where the
       data originated.

   3.  Destination_addr: Destination address field, which identifies
       where the data forwarded.

   4.  Sequence_num: Sequence number field, which is the ID of a packet.

   5.  Ack_id: Acknowledgment Id field, which provides a way to notify
       the sender that its data has been received successfully.




Xu                           Standards Track                    [Page 5]

RFC 1                            PRFC's                   September 2018


   6.  Exit: Exit field, if it's set to True value, then there is no
       more data to transfer.  Time to close the session.

   7.  Max_pkt: The max packet size field, which defines the maximum
       data size that the sender is allowed send.

   8.  Checksum: The checksum field, which prevent data from being
       corrupted or altered.  A cyclic redundancy check (CRC) algorithm
       can be used to provide this functionality.


Author's Address

   Cheng Xu (editor)
   JHU Network Security Fall 2018
   500 W Univeristy Pkwy St.
   Baltimore, MD  21210
   USA

   Phone: +1 443-938-6523
   Email: cxu33@jhu.edu






























Xu                           Standards Track                    [Page 6]

RFC 1                            PRFC's                   September 2018


Full Copyright Statement

   Copyright (C) Seth James Nielson (2018).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the PLAYGROUND experiment or
   other associated organizations, except by explicit permission.

   The limited permissions granted above are perpetual and will not be
   revoked by SETH JAMES NIELSON or his successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and SETH JAMES NIELSON and associated academic
   institutions DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The PLAYGROUND framework and student submissions for PLAYGROUND are
   intended to be free of any intellectual property conflicts.  All
   submitting parties, especially students, are not allowed to submit
   source code, specifications, or other components that are known to be
   protected by copyright, patents, or other IP mechanisms.  Students
   submitting creative content grant shared rights and ownership of
   their content to the PLAYGROUND project.  Specifically, any
   submission can be used in future educational settings including
   subsequent PLAYGROUND experiments.

   Any interested party is invited to bring to the experiment director's
   attention any copyrights, patents or patent applications, or other
   proprietary rights which may cover technology that may be currently
   in use without permission.

   It should be noted that these statements have not been reviewed by
   legal counsel.  Moreover, the academic institutions at which
   PLAYGROUND experiments take place may have additional or even
   conflicting copyright and intellectual property rules.  Accordingly,
   concerned parties may need to contact their own lawyer and/or
   resources at their institution to understand the rights and



Xu                           Standards Track                    [Page 7]

RFC 1                            PRFC's                   September 2018


   limitations associated with code donated to a PLAYGROUND experiment.


















































Xu                           Standards Track                    [Page 8]

